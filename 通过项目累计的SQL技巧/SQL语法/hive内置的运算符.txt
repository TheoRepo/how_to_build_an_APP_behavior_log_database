一、关系运算：

1. 等值比较: =
          语法：A=B
          操作类型：所有基本类型
          描述:  如果表达式A 与表达式B 相等，则为TRUE ；否则为FALSE
          举例：
         hive>select 1 from lxw_dual where 1=1;
         1

2. 不等值比较: <>

          语法: A <> B

操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A与表达式B不相等，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 1 <> 2;
1

3. 小于比较: <

          语法: A < B

操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A小于表达式B，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 1 < 2;

4. 小于等于比较: <=

语法: A <= B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A小于或者等于表达式B，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 1 <= 1;
1

5. 大于比较: >

语法: A > B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A大于表达式B，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 2 > 1;
1


6. 大于等于比较: >=

语法: A >= B
操作类型: 所有基本类型
描述: 如果表达式A为NULL，或者表达式B为NULL，返回NULL；如果表达式A大于或者等于表达式B，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where 1 >= 1;
1



注意：String 的比较要注意( 常用的时间比较可以先to_date 之后再比较)
hive> select* from lxw_dual;
OK
201111120900:00:00     2011111209

hive> selecta,b,a<b,a>b,a=b from lxw_dual;
201111120900:00:00     2011111209      false  true    false
7. 空值判断: IS NULL

语法: A IS NULL
操作类型: 所有类型
描述: 如果表达式A的值为NULL，则为TRUE；否则为FALSE
举例：
hive> select1 from lxw_dual where null is null;
1


8. 非空判断: IS NOT NULL

语法: A IS NOT NULL
操作类型: 所有类型
描述: 如果表达式A的值为NULL，则为FALSE；否则为TRUE
举例：
hive> select1 from lxw_dual where 1 is not null;
1


9. LIKE比较: LIKE

语法: A LIKE B
操作类型: strings
描述: 如果字符串A或者字符串B为NULL，则返回NULL；如果字符串A符合表达式B   的正则语法，则为TRUE；否则为FALSE。B中字符”_”表示任意单个字符，而字符”%”表示任意数量的字符。
举例：
hive> select1 from lxw_dual where 'football' like 'foot%';
1
hive> select1 from lxw_dual where 'football' like 'foot____';
1


注意：否定比较时候用NOT ALIKE B
hive> select1 from lxw_dual where NOT 'football' like 'fff%';
1
10. JAVA的LIKE操作: RLIKE

语法: A RLIKE B
操作类型: strings
描述: 如果字符串A或者字符串B为NULL，则返回NULL；如果字符串A符合JAVA正则表达式B的正则语法，则为TRUE；否则为FALSE。
举例：
hive> select1 from lxw_dual where 'footbar’ rlike '^f.*r$’;
1


注意：判断一个字符串是否全为数字：
hive>select 1 from lxw_dual where '123456' rlike '^\\d+$';
1
hive> select 1 from lxw_dual where '123456aa' rlike '^\\d+$';
11. REGEXP操作: REGEXP

语法: A REGEXP B
操作类型: strings
描述: 功能与RLIKE相同
举例：
hive> select1 from lxw_dual where 'footbar' REGEXP '^f.*r$';
1

二、数学运算：

1. 加法操作: +

语法: A + B
操作类型：所有数值类型
说明：返回A与B相加的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。比如，int + int 一般结果为int类型，而int + double 一般结果为double类型
举例：
hive> select1 + 9 from lxw_dual;
10
hive> createtable lxw_dual as select 1 + 1.2 from lxw_dual;
hive>describe lxw_dual;
_c0     double


2. 减法操作: -

语法: A – B
操作类型：所有数值类型
说明：返回A与B相减的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。比如，int – int 一般结果为int类型，而int – double 一般结果为double类型
举例：
hive> select10 – 5 from lxw_dual;
5
hive> createtable lxw_dual as select 5.6 – 4 from lxw_dual;
hive>describe lxw_dual;
_c0     double


3. 乘法操作: *

语法: A * B
操作类型：所有数值类型
说明：返回A与B相乘的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。注意，如果A乘以B的结果超过默认结果类型的数值范围，则需要通过cast将结果转换成范围更大的数值类型
举例：
hive> select40 * 5 from lxw_dual;
200


4. 除法操作: /

语法: A / B
操作类型：所有数值类型
说明：返回A除以B的结果。结果的数值类型为double
举例：
hive> select40 / 5 from lxw_dual;
8.0



注意：hive 中最高精度的数据类型是double, 只精确到小数点后16 位，在做除法运算的时候要特别注意
hive>select ceil(28.0/6.999999999999999999999) from lxw_duallimit 1;   
结果为4
hive>select ceil(28.0/6.99999999999999) from lxw_dual limit1;           
结果为5
5. 取余操作: %

语法: A % B
操作类型：所有数值类型
说明：返回A除以B的余数。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 41 % 5 from lxw_dual;
1
hive> select 8.4 % 4 from lxw_dual;
0.40000000000000036
注意：精度在hive 中是个很大的问题，类似这样的操作最好通过round 指定精度
hive> select round(8.4 % 4 , 2) from lxw_dual;
0.4

6. 位与操作: &

语法: A & B
操作类型：所有数值类型
说明：返回A和B按位进行与操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 & 8 from lxw_dual;
0
hive> select 6 & 4 from lxw_dual;
4


7. 位或操作: |

语法: A | B
操作类型：所有数值类型
说明：返回A和B按位进行或操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 | 8 from lxw_dual;
12
hive> select 6 | 8 from lxw_dual;
14


8. 位异或操作: ^

语法: A ^ B
操作类型：所有数值类型
说明：返回A和B按位进行异或操作的结果。结果的数值类型等于A的类型和B的类型的最小父类型（详见数据类型的继承关系）。
举例：
hive> select 4 ^ 8 from lxw_dual;
12
hive> select 6 ^ 4 from lxw_dual;
2


9．位取反操作: ~

语法: ~A
操作类型：所有数值类型
说明：返回A按位取反操作的结果。结果的数值类型等于A的类型。
举例：
hive> select ~6 from lxw_dual;
-7
hive> select ~4 from lxw_dual;
-5

三、逻辑运算：

1. 逻辑与操作: AND

语法: A AND B
操作类型：boolean
说明：如果A和B均为TRUE，则为TRUE；否则为FALSE。如果A为NULL或B为NULL，则为NULL
举例：
hive> select 1 from lxw_dual where 1=1 and 2=2;
1


2. 逻辑或操作: OR

语法: A OR B
操作类型：boolean
说明：如果A为TRUE，或者B为TRUE，或者A和B均为TRUE，则为TRUE；否则为FALSE
举例：
hive> select 1 from lxw_dual where 1=2 or 2=2;
1


3. 逻辑非操作: NOT

语法: NOT A
操作类型：boolean
说明：如果A为FALSE，或者A为NULL，则为TRUE；否则为FALSE
举例：
hive> select 1 from lxw_dual where not 1=2;
1