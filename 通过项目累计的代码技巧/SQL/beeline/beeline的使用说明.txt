什么是beeline?
Beeline是Hive 0.11版本呢引入的新命令行客户端工具，它是基于SQLLine CLI的JDBC客户端。

beeline支持嵌入式模式和远程模式。在嵌入式模式下，运行嵌入式的Hive（类似Hive CLI），而远程模式可以通过Thrift连接到独立的HiveServer2进程上。（从Hive0.14版本开始，Beeline使用HiveSever2工作时，它也会从HiveSever2输出日志信息到STDERR）

beeline连接
连接方式一

lenmom@Mi1701 ~$ beeline
Beeline version 1.2.1.spark2 by Apache Hive
beeline>!connect jdbc:hive2://localhost:10000/default
Connecting to jdbc:hive2://localhost:10000/default
Enter username for jdbc:hive2://localhost:10000/default: lenmom
Enter password for jdbc:hive2://cdh-server2:10000/default: *****
Connected to: Apache Hive (version 2.3.4)
Driver: Hive JDBC (version 2.3.4)
Transaction isolation: TRANSACTION_REPEATABLE_READ
0: jdbc:hive2://localhost:10014/default> show databases;
+----------------+--+
| database_name  |
+----------------+--+
| default        |
| orc          |
+----------------+--+
连接方式二

beeline -u "jdbc:hive2://localhost:10000"  -n lenmom -p  123456
连接方式三

sh beeline.sh

beeline常用的参数
Option Description  
--autoCommit=[true/false] ---进入一个自动提交模式：beeline --autoCommit=true  
--autosave=[true/false]   ---进入一个自动保存模式：beeline --autosave=true  
--color=[true/false]    ---显示用到的颜色：beeline --color=true  
--delimiterForDSV= DELIMITER ---分隔值输出格式的分隔符。默认是“|”字符。  
--fastConnect=[true/false]  ---在连接时，跳过组建表等对象：beeline --fastConnect=false  
--force=[true/false]    ---是否强制运行脚本：beeline--force=true  
--headerInterval=ROWS   ---输出的表间隔格式，默认是100: beeline --headerInterval=50  
--help ---帮助  beeline --help  
--hiveconf property=value  ---设置属性值，以防被hive.conf.restricted.list重置：beeline --hiveconf prop1=value1   
--hivevar name=value   ---设置变量名：beeline --hivevar var1=value1  
--incremental=[true/false]  ---输出增量
--isolation=LEVEL  ---设置事务隔离级别：beeline --isolation=TRANSACTION_SERIALIZABLE  
--maxColumnWidth=MAXCOLWIDTH ---设置字符串列的最大宽度：beeline --maxColumnWidth=25  
--maxWidth=MAXWIDTH ---设置截断数据的最大宽度：beeline --maxWidth=150  
--nullemptystring=[true/false]  ---打印空字符串：beeline --nullemptystring=false  
--numberFormat=[pattern]     ---数字使用DecimalFormat：beeline --numberFormat="#,###,##0.00"  
--outputformat=[table/vertical/csv/tsv/dsv/csv2/tsv2] ---输出格式：beeline --outputformat=tsv   
--showHeader=[true/false]   ---显示查询结果的列名：beeline --showHeader=false  
--showNestedErrs=[true/false] ---显示嵌套错误：beeline --showNestedErrs=true  
--showWarnings=[true/false] ---显示警告：beeline --showWarnings=true  
--silent=[true/false]  ---静默方式执行，不显示执行过程信息：beeline --silent=true  
--truncateTable=[true/false] ---是否在客户端截断表的列     
--verbose=[true/false]  ---显示详细错误信息和调试信息：beeline --verbose=true  
-d <driver class>  ---使用一个驱动类：beeline -d driver_class  
-e <query>  ---使用一个查询语句：beeline -e "query_string"  
-f <file>  ---加载一个文件：beeline -f filepath  多个文件用-e file1 -e file2
-n <username>  ---加载一个用户名：beeline -n valid_user  
-p <password>  ---加载一个密码：beeline -p valid_password  
-u <database URL> ---加载一个JDBC连接字符串：beeline -u db_URL
beeline常用操作
hive beeline使用shell批量执行sql语句
beeline脚本
#!/bin/bash
/opt/cloudera/parcels/CDH-5.15.2-1.cdh5.15.2.p0.3/bin/beeline --showHeader=false --outputformat=tsv2 -u "jdbc:hive2://dz-hadoop-dn2:2181,dz-hadoop-dn3:2181,dz-hadoop-dn4:2181/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2" "$@"

#!/bin/bash
beeline -u "jdbc:hive2://dz-hadoop-dn2:2181,dz-hadoop-dn3:2181,dz-hadoop-dn4:2181/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2"

shell脚本 -- create_strategy_table.sh
source /etc/profile
source ~/.bash_profile
sql_path=$1

sql_part="

drop table if exists ga.interface_app_strategy_20211030;

create table if not exists ga.interface_app_strategy_20211030
(
app_name string comment 'app名称',
app_apk string comment '已知安装包名'
)
comment 'app初始化策略表'
partitioned by (
app_strategy string comment 'app分类策略',
event_time string comment '数据入库时间'
)

row format delimited fields terminated by '\t'

stored as orc;

"

bash /home/${sql_path}/beeline.sh -e "$sql_part"

if [[ $? != 0 ]];then
echo "sql 运行失败！！！！！！"
exit 1
fi
echo 分区 '${pt}'数据写入完成

命令行语句
bash create_strategy_table.sh qianyu
将查询结果输出到临时文件中
beeline -u "jdbc:hive2://dwtest-name1:10000/default" -n root --silent=true --outputformat=csv2  -hivevar logdate=${dt}  -f script.q > ${file_tmp}
-f 对应查询的脚本 script.q

--outputformat=csv2 以逗号分隔

--silent=true静默方式执行，注意：输出文件的时候必须以静默方式运行，否则输出的文本中带有很多程序执行信息。

上述命令执行完成后发现输出的文件中仍然有许多空白行，好像没有参数控制，无奈之下使用shell命令来过滤空白行

通过下面任意一行命令来过滤空白行，最后出书结果正常

方式一
#cat ${file_tmp} | sed -e '/^$/d' > ${file}
方式二
grep -a -v "^$"  ${file_tmp} > ${file}